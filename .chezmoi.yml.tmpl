{{- $minimal := true -}}
{{- $home := env "HOME" -}}
{{- $name := "Jeremy Hettenhouser" -}}
{{- $email := "jhettenh@gmail.com" -}}
{{- $xdg_cache_home := expandenv ("$HOME/.cache") -}}
{{- $xdg_config_home := expandenv ("$HOME/.config") -}}
{{- $xdg_data_home := expandenv ("$HOME/.local/share") -}}
{{- $xdg_state_home := expandenv ("$HOME/.local/state") -}}
{{- $xdg_bin_home := expandenv ("$HOME/.local/bin") -}}
{{- $xdg_lib_home := expandenv ("$HOME/.local/lib") -}}
{{- $ansible_home := expandenv ("$HOME/.ansible") -}}
{{- $ansible_venv := joinPath $ansible_home ".venv" -}}
{{- $chezmoi_venv := joinPath .chezmoi.homeDir ".venv" -}}
{{- $dasbootstrap_home := joinPath $xdg_data_home "/automation/dasbootstrap" -}}
{{- $dasbootstrap_venv := joinPath $dasbootstrap_home ".venv" -}}
{{- $homebrew_home := "/home/linuxbrew/.linuxbrew" -}}
{{- $poetry := "poetry" -}}
{{- $pipx_home := expandenv ("$HOME/.local/pipx") -}}
{{- $python_ver := "3.12" | toString -}}
{{- $ansible_home := joinPath $home "/.ansible" -}}
{{- $ansible_inv_home := joinPath $ansible_home "/inventory" -}}
{{- $ansible_grp_vars_home := joinPath $ansible_inv_home "/group_vars" -}}
{{- $runPrefix := "poetry run" -}}
{{- $venvPrefix := "pyenv virtualenv" -}}

keepassxc:
  database: "{{ $home }}/.local/share/trapper_keeper/secrets.kdbx"

encryption: "age"
age:
  identity: "{{ $home }}/.config/age/key.txt"
  recipient: "age1lcu6z9m9ukm9d0c4m90v790rvujlkr5ftzhdmyt866cqzlwhe39sla86hm"

hooks.read-source-state.pre:
command: "declare"

scriptEnv:
  XDG_CACHE_HOME: {{$xdg_cache_home}}
  XDG_CONFIG_DIRS: /etc/xdg:{{$xdg_config_home}}
  XDG_CONFIG_HOME: {{$xdg_config_home}}
  XDG_DATA_DIRS: /usr/local/share:/usr/share:{{$xdg_data_home}}/var/lib/flatpak/exports/share:{{$xdg_data_home}}/flatpak/exports/share
  XDG_DATA_HOME: {{$xdg_data_home}}
  XDG_STATE_HOME: {{$xdg_state_home}}
  XDG_BIN_HOME: {{$xdg_bin_home}}
  XDG_LIB_HOME: {{$xdg_lib_home}}
  PYENV_VERSION: system
  HOMEBREW_PREFIX: {{$homebrew_home}}
  PIPX_HOME: {{$pipx_home}}

# all variables avoid shell interpolation so that conversion to .env, export var, etc is easier
data:
  home: "{{ $home }}"
  name: "{{ $name }}"
  email: "{{ $email }}"
  directories: [
    'ANSIBLE_HOME: "{{$ansible_home}}',
  ]
  taskfile: [
    'BREW: brew',
    'HOME: "{{ $home }}"',
    'POETRY: poetry',
    'PYTHON: python3',
    'PYTEST: pytest',
    'PIP: pip3',
    'GH: gh',
    'STREAMLIT: streamlit',
    'RUN_PREFIX: "{{ $runPrefix }}"',
    'TOML_SUFFIX: "--toml"',
    'YAML_SUFFIX: "--yaml"',
    'JSON_SUFFIX: "--json"',
    'PYTHON_VER: {{$python_ver}}',
    'DASBOOTSTRAP_HOME: "{{$dasbootstrap_home}}"',
    'ANSIBLE_HOME: "{{$home}}/.ansible"',
    'CHEZMOI_HOME: "{{.chezmoi.sourceDir}}"',
    'VENV_PREFIX: "{{$venvPrefix}}"',
    'DBS_VENV_POETRY: "{{joinPath $dasbootstrap_home "/.venv/bin/poetry"}}"',
    'DBS_RUN_PREFIX: "{{joinPath $dasbootstrap_home "/.venv/bin/poetry"}} run"',
    'DBS_VENV_PYTHON: "{{joinPath $dasbootstrap_home "/.venv/bin/poetry"}} run {{joinPath $dasbootstrap_home "/.venv/bin/python"}}"',
    'DBS_VENV_PACKAGES: "{{joinPath $dasbootstrap_home (nospace (cat "/.venv/lib/python" $python_ver)) "/site-packages/dasbootstrap"}}"',
    'ST_RUN_PREFIX: "{{$runPrefix}} streamlit run"',
    'RUN_UNITTEST_PREFIX: "{{$runPrefix}} python -m unittest"',
  ]
  taskfile_ansible: [
    'ANSIBLE: ansible',
    'ANSIBLE_INVENTORY: ansible-inventory',
    'ANSIBLE_PLAYBOOK: ansible-playbook',
    'ANSIBLE_GALAXY: ansible-galaxy',
    'ANSIBLE_VAULT: ansible-vault',
    'ANSIBLE_DOCS: ansible-docs',
    'ANSIBLE_RUNNER: ansible-runner',
    'ANSIBLE_PULL: ansible-pull',
    'ANSIBLE_PB_PREFIX: "{{$runPrefix}} ansible-playbook"',
    'ANSIBLE_INV_HOME: "{{$ansible_home}}/inventory"',
    'ANSIBLE_INV_CACHE: "{{$xdg_cache_home}}/ansible"',
    'ANSIBLE_ALL_INV_SUFFIX: "-i {{$ansible_inv_home}}/"',
    'ANSIBLE_STATIC_INV_SUFFIX: "-i {{$ansible_inv_home}}/hosts.yaml"',
    'ANSIBLE_NMAP_INV_SUFFIX: "-i {{$ansible_inv_home}}/nmap.yaml"',
    'ANSIBLE_PROXMOX_INV_SUFFIX: "-i {{$ansible_inv_home}}/proxmox.yaml"',
    'ANSIBLE_INV_EXPORT_SUFFIX: " --list"',
    'ALL_KVM_VARS: "{{$ansible_grp_vars_home}}/proxmox_all_kvm.yaml"',
    'ALL_VARS: "{{$ansible_grp_vars_home}}/all.yaml"',
    'ALL_LXC_VARS: "{{$ansible_grp_vars_home}}/proxmox_all_lxc.yaml"',
    'ANSIBLE_ALL_VARS_SUFFIX: "-e @{{$ansible_grp_vars_home}}/all.yaml"',
    'ANSIBLE_LXC_VARS_SUFFIX: "-e @{{$ansible_grp_vars_home}}/proxmox_all_kvm.yaml"',
    'ANSIBLE_KVM_VARS_SUFFIX: "-e @{{$ansible_grp_vars_home}}/proxmox_all_lxc.yaml"',
    'ANSIBLE_VARS_SUFFIX: "-e @{{$ansible_grp_vars_home}}/all.yaml -e @{{$ansible_grp_vars_home}}/proxmox_all_kvm.yaml -e@{{$ansible_grp_vars_home}}/proxmox_all_lxc.yaml"',
    'ANSIBLE_SVC_USER: ansible',
    'ANSIBLE_SYS_USER: root',
  ]
  taskfile_dasbootstrap: [

  ]
  # redefine all xdg vars for easier access in go templates
  xdg_data_home: "{{$xdg_data_home}}"
  xdg_bin_home: "{{$xdg_bin_home}}"
  xdg: [
    'XDG_CACHE_HOME: {{$xdg_cache_home}}',
    'XDG_CONFIG_DIRS: /etc/xdg:{{$xdg_config_home}}',
    'XDG_CONFIG_HOME: {{$xdg_config_home}}',
    'XDG_DATA_DIRS: /usr/local/share:/usr/share:{{$xdg_data_home}}/var/lib/flatpak/exports/share:{{$xdg_data_home}}/flatpak/exports/share',
    'XDG_DATA_HOME: {{$xdg_data_home}}',
    'XDG_STATE_HOME: {{$xdg_state_home}}',
    'XDG_BIN_HOME: {{$xdg_bin_home}}',
    'XDG_LIB_HOME: {{$xdg_lib_home}}',
  ]
