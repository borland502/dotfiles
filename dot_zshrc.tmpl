# shellcheck shell=bash
# @author Jeremy Hettenhouser
#
# Sources
# https://github.com/zdharma/zinit-configs/blob/master/numToStr/zshrc.zsh

# profiling
# zmodload zsh/zprof

#shellcheck disable=SC1009,SC1050,SC1054,SC1072,SC1073
{{ if (eq .chezmoi.os "darwin") }}

export CLICOLOR=1
export KRB5CCNAME=KCM:jeremy

#iTerm2
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh" || true

{{ else if (eq .chezmoi.os "linux" ) }}
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
export PATH="$PATH:$HOME/bin"

  {{ if (.chezmoi.kernel.osrelease | lower | contains "microsoft")}}
  #WSL
  # Hack: Solve slow FZF issue
unsetopt PATH_DIRS
  {{ end }}
{{ else }}

{{ end }}

# Universal
export PATH="$PATH:$HOME/.google-drive-upload/bin"

# do not beep at me dammit
setopt NO_BEEP
# no c-s/c-q output freezing
setopt NO_FLOW_CONTROL
# allow expansion in prompts
setopt PROMPT_SUBST
# display PID when suspending processes as well
setopt LONG_LIST_JOBS
# try to avoid the 'zsh: no matches found...'
setopt NONOMATCH
# report the status of backgrounds jobs immediately
setopt NOTIFY
# whenever a command completion is attempted, make sure the entire command path
# is hashed first.
setopt HASH_LIST_ALL
# not just at the end
setopt COMPLETE_IN_WORD
# use zsh style word splitting
setopt NO_SH_WORD_SPLIT
# allow use of comments in interactive code
setopt INTERACTIVE_COMMENTS
# this is default, but set for share_history
setopt APPEND_HISTORY
# If the internal history needs to be trimmed to add the current command line, setting this option will cause the oldest history event that has a duplicate to be lost before losing a unique event from the list. You should be sure to set the value of HISTSIZE to a larger number than SAVEHIST in order to give you some room for the duplicated events, otherwise this option will behave just like HIST_IGNORE_ALL_DUPS once the history fills up with unique events.
setopt HIST_EXPIRE_DUPS_FIRST
# When searching for history entries in the line editor, do not display duplicates of a line previously found, even if the duplicates are not contiguous.
setopt HIST_FIND_NO_DUPS
# If a new command line being added to the history list duplicates an older one, the older command is removed from the list (even if it is not the previous event).
setopt HIST_IGNORE_ALL_DUPS

## History.
HISTFILE="${ZDOTDIR:-$HOME}/.zhistory"
HISTSIZE=100000
SAVEHIST=5000

# Added by Zinit's installer
if [[ ! -f ${HOME}/.local/share}/zinit/zinit.git/zinit.zsh ]]; then
    ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
    mkdir -p "$(dirname $ZINIT_HOME)"
    git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
source "${ZINIT_HOME}/zinit.zsh"

autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zinit-zsh/z-a-rust \
    zinit-zsh/z-a-as-monitor \
    zinit-zsh/z-a-patch-dl \
    zinit-zsh/z-a-bin-gem-node \

# End of Zinit's installer chunk

## Prompt
zinit lucid for \
    as"command" from"gh-r" atinit'export N_PREFIX="$HOME/n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"' atload'eval "$(starship init zsh)"' bpick'*unknown-linux-gnu*' \
    starship/starship \
## End Prompt

## Oh My Zsh plugins, libraries, and functions
setopt promptsubst

zinit lucid for \
    atinit"HIST_STAMPS=dd.mm.yyyy" \
    OMZL::history.zsh \

zinit wait lucid for \
	OMZL::clipboard.zsh \
	OMZL::compfix.zsh \
	OMZL::correction.zsh \
	OMZL::git.zsh \
	OMZL::termsupport.zsh \
    OMZ::plugins/git-auto-fetch/git-auto-fetch.plugin.zsh \
    atload"
        alias gcd='gco dev'
    " \
	OMZP::git \
    OMZP::colored-man-pages \
    OMZP::mvn \
    OMZP::npm \
    OMZP::vscode \
    OMZP::python \
    OMZP::aws 

# zsh github plugins

zinit wait lucid for \
light-mode atinit"ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20" atload"_zsh_autosuggest_start" \
    zsh-users/zsh-autosuggestions \
light-mode atinit"
    typeset -gA FAST_HIGHLIGHT;
    FAST_HIGHLIGHT[git-cmsg-len]=100;
    zpcompinit;
    zpcdreplay;
" \
    zdharma/fast-syntax-highlighting \
light-mode blockf atpull'zinit creinstall -q .' \
atinit"
    zstyle ':completion:*' completer _expand _complete _ignored _approximate
    zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
    zstyle ':completion:*' menu select=2
    zstyle ':completion:*' select-prompt '%SScrolling active: current selection at %p%s'
    zstyle ':completion:*:descriptions' format '-- %d --'
    zstyle ':completion:*:processes' command 'ps -au$USER'
    zstyle ':completion:complete:*:options' sort false
    zstyle ':fzf-tab:complete:_zlua:*' query-string input
    zstyle ':completion:*:*:*:*:processes' command 'ps -u $USER -o pid,user,comm,cmd -w -w'
    zstyle ':fzf-tab:complete:kill:argument-rest' extra-opts --preview=$extract'ps --pid=$in[(w)1] -o cmd --no-headers -w -w' --preview-window=down:3:wrap
    zstyle ':fzf-tab:complete:cd:*' extra-opts --preview=$extract'exa -1 --color=always ${~ctxt[hpre]}$in'
" \
    zsh-users/zsh-completions \
bindmap"^R -> ^H" atinit"
    zstyle :history-search-multi-word page-size 10
    zstyle :history-search-multi-word highlight-color fg=red,bold
    zstyle :plugin:history-search-multi-word reset-prompt-protect 1
" \
    zdharma/history-search-multi-word \
reset \
atclone"local P=${${(M)OSTYPE:#*darwin*}:+g}
        \${P}sed -i \
        '/DIR/c\DIR 38;5;63;1' LS_COLORS; \
        \${P}dircolors -b LS_COLORS > c.zsh" \
atpull'%atclone' pick"c.zsh" nocompile'!' \
atload'zstyle ":completion:*" list-colors “${(s.:.)LS_COLORS}”' \
    trapd00r/LS_COLORS \
    lukechilds/zsh-nvm \
    paulirish/git-open \
    Tarrasch/zsh-autoenv \
    djui/alias-tips \
    fcambus/ansiweather \
    wfxr/forgit 

export LANG=en_US.UTF-8

# Pyenv
export PYENV_VIRTUALENV_DISABLE_PROMPT=1

# Nodejs
export NVM_AUTO_USE=true

# zinit vars
export ZINIT_HOME="${ZDOTDIR:-${HOME/.zinit}}"

##Liquibase
export LIQUIBASE_HOME="$HOME/Development/bitbucket/liquibase/codb/liquibase-3.2.2"

## Homebrew
export HOMEBREW_CASK_OPTS=--require-sha
export HOMEBREW_NO_INSECURE_REDIRECT=1

#GPG config
export GPG_TTY=$TTY

##Maven
export MAVEN_OPTS="-Xms1024m -Xms2048m -Dmaven.artifact.threads=10"

##IntelliJ
export IDEA_VM_OPTIONS="
-ea
-server
-Xms1024m
-Xmx4096m
-Xss16m
-XX:MaxMetaspaceSize=2G
-XX:MetaspaceSize=1G
-XX:ConcGCThreads=8
-XX:ParallelGCThreads=8
-XX:NewRatio=1
-XX:ReservedCodeCacheSize=240m
-XX:+AlwaysPreTouch
-XX:+UseG1GC
-XX:+DoEscapeAnalysis
-XX:+TieredCompilationUseG1GC
-XX:SoftRefLRUPolicyMSPerMB=50
-XX:+UnlockExperimentalVMOptions
-Dsun.io.useCanonPrefixCache=false
-Djava.net.preferIPv4Stack=true
-Dsun.io.useCanonCaches=false
-XX:LargePageSizeInBytes=256m
-XX:+UseCodeCacheFlushing
-XX:+DisableExplicitGC
-XX:+ExplicitGCInvokesConcurrent
-XX:+PrintGCDetails
-XX:+PrintFlagsFinal
-XX:+AggressiveOpts
-XX:+CMSClassUnloadingEnabled
-XX:CMSInitiatingOccupancyFraction=60
-XX:+CMSParallelRemarkEnabled
-XX:+UseAdaptiveGCBoundary
-XX:+UseSplitVerifier
-XX:CompileThreshold=10000
-XX:+OptimizeStringConcat
-XX:+UseStringCache
-XX:+UseFastAccessorMethods
-XX:+UnlockDiagnosticVMOptions
-Djdk.http.auth.tunneling.disabledSchemes=""
-XX:+HeapDumpOnOutOfMemoryError
-XX:-OmitStackTraceInFastThrow
-Djdk.attach.allowAttachSelf=true
-Dkotlinx.coroutines.debug=off
-Djdk.module.illegalAccess.silent=true
-XX:+UseCompressedOops
-Dfile.encoding=UTF-8
-XX:CICompilerCount=2
-Xverify:none

-XX:ErrorFile=$USER_HOME/java_error_in_idea_%p.log
-XX:HeapDumpPath=$USER_HOME/java_error_in_idea.hprof
-Djavax.net.ssl.trustStore=/usr/local/etc/truststore/dev-20160524-01.truststore
-Djavax.net.ssl.trustStorePassword=changeit
"

# Functions
# Load all files from .shell/zshrc.d directory
if [[ -d "$HOME/.shellrc/zshrc.d" ]]; then
  for file in "$HOME"/.shellrc/zshrc.d/*.zsh; do
    # shellcheck source=/dev/null
    source "$file"
  done
fi

# Load all files from .shell/rc.d directory
if [ -d "$HOME"/.shellrc/rc.d ]; then
  for file in "$HOME"/.shellrc/rc.d/*.sh; do
    # shellcheck source=/dev/null
    source "$file"
  done
fi

# Aliases
alias cdnginx='cd /usr/local/etc/nginx'
alias zscripts='cd /.shellrc/zshrc.d'

alias psnginx='ps -ef | grep nginx'
alias startnginx='sudo nginx'
alias stopnginx='sudo nginx -s stop'
alias ping='prettyping --nolegend'
alias preview="fzf --preview 'bat --color \"always\" {}'"

# Override common commands
alias cat="bat --pager=never"
alias top="sudo htop"
alias du="ncdu --color dark -rr -x --exclude .git --exclude node_modules"

alias mvncv=mvn clean verify
alias mvnt='mvn clean test -T1.5C'

alias cdliquibase='cd $HOME/Development/bitbucket/liquibase'
alias cdc="chezmoi cd"
alias cddev='cd $HOME/Development'

alias weather='ansiweather'

alias gcala='gcalcli agenda'
alias gcah="gcalcli --calendar $HASSIO_CAL_NAME quick $1"

# todo.txt
alias tdl='td list'
alias tda='tds add'

#exa replacement aliases from https://github.com/DarrinTisdale/zsh-aliases-exa
## general use
alias ls='exa'                                                          # ls
alias l='exa -lbF --git'                                                # list, size, type, git
alias ll='exa -lbGF --git'                                             # long list
alias llm='exa -lbGd --git --sort=modified'                            # long list, modified date sort
alias la="exa -lbhHigUmuSa --git --color-scale"  # all list
alias lx='exa -lbhHigUmuSa@ --git --color-scale' # all + extended list

## specialty views
alias lS='exa -1'                                                              # one column, just names
alias lt='exa --tree --level=2'                                   # tree

## The price of using an unusual terminal
# alias ssh="kitty +kitten ssh"

# virtual environments
if command -v jenv &> /dev/null
then
    eval "$(jenv init -)"
fi

eval "$(pyenv virtualenv-init -)"

# MOTD

#1Password signin.  Assume set up already by chezmoi
# eval $(op signin my)

#1Password completion
# eval "$(op completion zsh)"

# end profiling
#zprof
