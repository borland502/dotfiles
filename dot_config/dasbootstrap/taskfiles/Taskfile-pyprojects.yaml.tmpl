# chezmoi:template:left-delimiter="##" right-delimiter=##
version: "3"
vars:
  ##range .taskfile -##
  ##.##
  ##end -##
  ##range .taskfile_ansible -##
  ##.##
  ##end##
  PYTEST_PREFIX: pytest
tasks:
  venv:destroy:
    desc: Destroy the venv associated with this taskfile
    cmds:
      - "{{.POETRY}} env remove --all"
  poetry:dbsshell:
    internal: true
    silent: true
    desc: Switch to Dasbootstrap shell
    cmds:
      - "{{.VENV_ACTIVATE}}"
  poetry:init:
    desc: Intitialize a new poetry project
    deps:
      - task: poetry:dbsshell
    cmds:
      - "{{.POETRY}} init --no-interaction"
  build:clean:
    desc: Clean build directories
    cmds:
      - "{{.PIP_PREFIX}} uninstall {{.PYTHON_DIST}}/*.whl -y"
      - "rm -rf {{.PYTHON_DIST}}"
  build:
    deps:
      - task: poetry:dbsshell
    desc: Build all pyprojects and the shared libraries for them
    cmds:
      - "{{.BUILD_ALL_PREFIX}}"
    sources:
      - "{{.PYTHON_PROJ_SRC}}"
      - "{{.PYTHON_SHARED_SRC}}"
      - "{{.PYTHON_ST_SRC}}"
      - "{{.PYTHON_DASH_SRC}}"
      - "bin/*.py"
  tests:integration:
    internal: true
    deps:
      - task: lint
    desc: Runs molecule integration and pytest unit/integration tests
    cmds:
      - "{{.PYTEST_PREFIX}}"
  tests:functional:
    internal: true
    desc: Runs all actions against a live proxmox server
    deps:
      - task: install
    cmds:
      - task: tests:integration
      - task: update
      - "{{.DASBOOTSTRAP_PREFIX}} destroy --app-name lxc"
      - "{{.DASBOOTSTRAP_PREFIX}} create-lxc --app-name lxc"
      - "{{.DASBOOTSTRAP_PREFIX}} destroy --app-name lxc"
  ruff:check:
    desc: Run ruff
    cmds:
      - "{{.RUN_PREFIX}} ruff check {{.PYTHON_PROJ_SRC}} {{.PYTHON_SHARED_SRC}} {{.PYTHON_ST_SRC}} {{.PYTHON_DASH_SRC}} --config {{.DASBOOTSTRAP_HOME}}/pyproject.toml --fix"
  ruff:format:
    desc: Format code
    cmds:
      - "{{.RUN_PREFIX}} ruff format {{.PYTHON_PROJ_SRC}} {{.PYTHON_SHARED_SRC}} {{.PYTHON_ST_SRC}} {{.PYTHON_DASH_SRC}} --config {{.DASBOOTSTRAP_HOME}}/pyproject.toml --line-length 128 --target-version py312"
  bandit:
    internal: true
    desc: Run bandit
    cmds:
      - "{{.RUN_PREFIX}} bandit -c {{.DASBOOTSTRAP_HOME}}/pyproject.toml -r {{.PYTHON_PROJ_SRC}} {{.PYTHON_SHARED_SRC}} {{.PYTHON_ST_SRC}} {{.PYTHON_DASH_SRC}}"
  lint:
    desc: Runs linters for dasbootstrap project
    deps:
      - task: poetry:dbsshell
    cmds:
      - task: bandit
      - task: ruff:check
      - task: ruff:format
  install:
    desc: Install all pyprojects to local .venv
    sources:
      - "{{.PYTHON_PROJ_SRC}}"
      - "{{.PYTHON_SHARED_SOURCE}}"
      - "{{.PYTHON_ST_SRC}}"
      - "{{.PYTHON_DASH_SRC}}"
    cmds:
      - task: build
      - "{{.PIP_PREFIX}} install {{.PYTHON_DIST}}/*.whl --force-reinstall --no-deps"
    dir: "{{.DASBOOTSTRAP_HOME}}"
  test:
    desc: Run unit tests
    deps:
      - task: build
      - task: ruff:format
    cmds:
      - "{{.RUN_UNITTEST_PREFIX}}"
  test:all:
    desc: Run unit, integration, and functional tests
    deps:
      - task: build
      - task: ruff:format
    cmds:
      - task: test
      - task: tests:integration
      - task: tests:functional
  run_app:
    deps:
      - install
      - task: poetry:dbsshell
    desc: Run Automation Station
    cmds:
      - "{{.ST_RUN_PREFIX}} Home.py"
