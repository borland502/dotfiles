# chezmoi:template:left-delimiter="[[]]" right-delimiter=]]
version: "3"

# https://github.com/RDFLib/rdflib/blob/main/Taskfile.yml
# https://github.com/davnn/safecheck/blob/main/Taskfile.yml

vars:
  [[range .taskfile -]]
  [[.]]
  [[end]]
  PROJECT_NAME: "dashboard"
  PYTEST_PREFIX: "{{.RUN_PREFIX}} {{.PYTEST}}"
  PIP_PREFIX: "{{.RUN_PREFIX}} {{.PIP}}"
  BUILD_ALL_PREFIX: "{{.POETRY}} build-project"
  PYTHON_PROJ_SRC: "./Home.py ./pages/*.py ./utils/*.py"
  PYTHON_DIST: "dist"
  PYPROJECTS_VENV: "./venv/**/{{.PROJECT_NAME}}/*"
  VENV_ACTIVATE: "if [[ $(command -v deactivate) ]]; then deactivate; fi; poetry shell"
  RUN_MODULE_PREFIX: "{{.RUN_PREFIX}} {{.PYTHON}} -m"
  RUN_UNITTEST_PREFIX: "{{.RUN_MODULE_PREFIX}} unittest discover ."

includes:
  ans:
    taskfile: taskfiles/Taskfile-ansible.yaml
    dir: [[.ANSIBLE_HOME]]
  inv:
    taskfile: taskfiles/Taskfile-inventory.yaml
    dir: [[.ANSIBLE_HOME]]

tasks:
  default:
    cmds:
      - |
        command -v brew >/dev/null || { echo "brew is mandatory for this to work, please install it"; exit 1; }
        command -v gum >/dev/null|| brew install gum

        selected=$(task --list-all | grep -v "task: Available" | grep -v "default:" | gum filter --indicator="->" --placeholder="Type to search for a task...")
        echo "$selected" | awk '{sub(/:$/, "", $2); print $2}' | xargs task

  build:clean:
    preconditions:
      - sh: "find {{.PYTHON_DIST}} -name '*.whl' -print -quit || exit 1"
        msg: "Nothing to clean...skipping"
    desc: Clean build directories
    cmds:
      - "{{.PIP_PREFIX}} uninstall {{.PYTHON_DIST}}/*.whl -y"
      - "rm -rf {{.PYTHON_DIST}}"

  build:
    desc: Build all pyprojects and the shared libraries for them
    cmds:
      - "{{.BUILD_ALL_PREFIX}}"

  test:
    deps:
      - task: build
      - task: tools:format
    desc: Run all tests
    cmds:
      - "{{.RUN_UNITTEST_PREFIX}}"

  tools:format:
    desc: Format code
    cmds:
      - "{{.RUN_PREFIX}} ruff format {{.PYTHON_PROJ_SRC}} --config pyproject.toml"

  install:
    desc: Install all pyprojects to local .venv
    deps:
      - task: build
    cmds:
      - "{{.PIP_PREFIX}} install {{.PYTHON_DIST}}/*.whl --force-reinstall --no-deps"
      - task: build:clean

  tools:bandit:
    desc: Run bandit
    cmds:
      - "{{.RUN_PREFIX}} bandit -c pyproject.toml -r {{.PYTHON_PROJ_SRC}}"

  lint:
    desc: Runs linters
    deps:
      - task: tools:bandit
      - task: tools:format

