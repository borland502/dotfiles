# Use all gnu utils rather than the elderly BSD ones
export PATH=/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH

# requires dircolors from coreutils
if [[ -f "${HOME}/.env" ]]; then
    source "${HOME}/.env"
fi

# XDG script path
export PATH=${XDG_BIN_HOME}:$(brew --prefix)/bin:${PATH}

# https://notes.billmill.org/computer_usage/asdf/make_asdf_follow_the_XDG_spec.html
if [[ -d $XDG_DATA_HOME/asdf ]]; then
  # I really wish asdf supported XDG_CONFIG:
  # https://github.com/asdf-vm/asdf/issues/687
  #
  # so let's set a bunch of variables that let us pretend it does
  export ASDF_DIR="$XDG_DATA_HOME/asdf"
  export ASDF_DATA_DIR="$XDG_DATA_HOME/asdf"
  . "$ASDF_DIR/asdf.sh"
  # https://asdf-vm.com/manage/configuration.html#asdfrc
  export ASDF_CONFIG_FILE="$XDG_CONFIG_HOME/asdfrc"
  # https://github.com/asdf-vm/asdf-nodejs#default-npm-packages
  export ASDF_NPM_DEFAULT_PACKAGES_FILE="$XDG_CONFIG_HOME/default-npm-packages"
  # https://github.com/asdf-community/asdf-python#default-python-packages
  export ASDF_PYTHON_DEFAULT_PACKAGES_FILE="$XDG_CONFIG_HOME/default-python-packages"
fi

# shellcheck disable=SC1009,SC1050,SC1054,SC1072,SC1073
{{- if eq .chezmoi.os "darwin" }}

export CLICOLOR="1"

# Huber prereqs
export PKG_CONFIG_PATH="/usr/local/opt/libarchive/lib/pkgconfig"

{{- else if eq .chezmoi.os "linux" }}

# linuxbrew is not installed on arm
{{if findOneExecutable (list "brew") (list "/home/linuxbrew/.linuxbrew/bin" (env "PATH")) }}
if [[ -d /home/linuxbrew/.linuxbrew ]]; then
    # Linuxbrew
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
    # Zinit initialization -- assume prior install
    source /home/linuxbrew/.linuxbrew/opt/zinit/zinit.zsh
    elif [[ -d "$HOME/.linuxbrew" ]]; then
    eval "$(${HOME}/.linuxbrew/bin/brew shellenv)"
    source "${HOME}/.linuxbrew/opt/zinit/zinit.zsh"
fi
{{end}}

{{- if eq .chezmoi.os "microsoft" }}
# WSL
# Hack: Solve slow FZF issue
unsetopt PATH_DIRS
{{ end }}

{{ else }}

{{ end }}

{{ if eq .chezmoi.os "linux" }}
# Wayland
export GDK_BACKEND=wayland
{{end}}

## Homebrew
export HOMEBREW_CASK_OPTS=--require-sha
export HOMEBREW_NO_INSECURE_REDIRECT=1

#GPG config
export GPG_TTY=$TTY

export EDITOR='vim'
export VISUAL='vim'
export SYSTEMD_EDITOR='vim'

export PYTHONIOENCODING=UTF-8
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8

# chezmoi home
export CHEZMOI_HOME="${XDG_CONFIG_HOME}/automation/home-ops/scripts/dotfiles"

# JAVA_HOME
if [[ -n ${ASDF_DIR+x} ]]; then
  export JAVA_HOME=$(asdf where java)
  export PATH=$JAVA_HOME/bin:$PATH
fi
